/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.*;
import java.sql.*;
import java.awt.event.*;

public class SearchDialogue extends javax.swing.JFrame {

    JFrame frame, frame1;
    JTextField textbox;
    JLabel label;
    JButton button;
    JPanel panel;
    static JTable table;
    Connection conn = MySqlConnect.ConnectDB();
    PreparedStatement pst = null;
    ResultSet res = null;
    String[] columnNames = {"Barcode", "Product Name", "Batch Number", "Date of Arrival", "Expiry Date"};
    
    
    public SearchDialogue() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBatchNum = new javax.swing.JTextField();
        checkbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Enter the product's name/barcode");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Batch Number:");

        txtBatchNum.setEnabled(false);
        txtBatchNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchNumActionPerformed(evt);
            }
        });

        checkbox.setSelected(true);
        checkbox.setText("All batches");
        checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBatchNum, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkbox)))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(84, 84, 84))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBatchNum, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(checkbox)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(btnSearch)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        showTableData();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtBatchNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchNumActionPerformed
        
    }//GEN-LAST:event_txtBatchNumActionPerformed

    private void checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxActionPerformed
        if(checkbox.isSelected())
        {
            txtBatchNum.setText("");
            txtBatchNum.setEnabled(false);
        }else
        {
            txtBatchNum.setEnabled(true);
        }
    }//GEN-LAST:event_checkboxActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    public void showTableData()
    {
        frame1 = new JFrame("Batch Search Results");
        frame1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame1.setLayout(new BorderLayout());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        table = new JTable();
        table.setModel(model);
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.setFillsViewportHeight(true);
        JScrollPane scroll = new JScrollPane(table);
        scroll.setHorizontalScrollBarPolicy(
                JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scroll.setVerticalScrollBarPolicy(
                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        String barcode = "";
        String name = "";
        String batch = "";
        String dateIn = "";
        String dateOut = "";
        
            
            if (txtBatchNum.getText().isEmpty() && checkbox.isSelected()) {
            try {

                String sql = "SELECT * FROM "
                        + "tblBatches a INNER JOIN "
                        + "tblBatchProducts b on a.batchID = b.batchID "
                        + "INNER JOIN tblProducts c "
                        + "on b.productID = c.productID WHERE c.prodName LIKE ? OR c.productID = ?";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "%" + txtSearch.getText() + "%");
                pst.setString(2, txtSearch.getText());
                res = pst.executeQuery();
                while (res.next()) {
                    System.out.println(dateIn);
                    barcode = res.getString("productID");
                    name = res.getString("ProdName");
                    String batchid = res.getString("batchID");
                    String arr[] = batchid.split("-");
                    batch = arr[1];
                    dateIn = res.getString("dateArrived");
                    dateOut = res.getString("dateExpired");
                    model.addRow(new Object[]{barcode, name, batch, dateIn, dateOut});

                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
            
            
            }else if (!checkbox.isSelected())
            {
                
                try {

                String sql = "SELECT * FROM "
                        + "tblBatches a INNER JOIN "
                        + "tblBatchProducts b on a.batchID = b.batchID "
                        + "INNER JOIN tblProducts c "
                        + "on b.productID = c.productID WHERE c.prodName LIKE ?";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "%" + txtSearch.getText() + "%");
                res = pst.executeQuery();
                while (res.next()) {
                    System.out.println(dateIn);
                    barcode = res.getString("productID");
                    name = res.getString("ProdName");
                    String batchid = res.getString("batchID");
                    String arr[] = batchid.split("-");
                    batch = arr[1];
                    dateIn = res.getString("dateArrived");
                    dateOut = res.getString("dateExpired");
                    if (Integer.parseInt(batch) == Integer.parseInt(txtBatchNum.getText()))
                    {
                        model.addRow(new Object[]{barcode, name, batch, dateIn, dateOut});
                    }
                    

                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
                
                
            }
            
        
        
            frame1.add(scroll);                 
  
            frame1.setVisible(true);
            frame1.setSize(600, 400);
            frame1.setLocationRelativeTo(null);
            
            
                
                if (model.getRowCount()==0) 
                {
                    JOptionPane.showMessageDialog(null, "No results found.", "No products", JOptionPane.ERROR_MESSAGE, null);
                }
                
           
            
    }   
            
        
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchDialogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchDialogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchDialogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchDialogue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchDialogue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtBatchNum;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
